---
- hosts: all
  gather_facts: no
  vars_files:
    - group_vars/vault.yml


#
# Original working fabric script:
#

#run('rsync -avz --delete production:{0} {1}'.format('/home/swasher/pdfupload', '~'))
#run('rsync -avz --delete production:{0} {1}'.format('/home/swasher/static_root', '~'))
#
## раскомментировать, если нужно скопировать БД и ресурсы с prod на staging
#run('rsync -avz --delete production:{0} {1}'.format('/home/swasher/media', '~'))
#run('sudo -u postgres dropdb --if-exists pdfuploaddb')
#run("sudo -u postgres createdb --encoding='UTF-8' --owner=swasher --template=template0 pdfuploaddb")
#run('pg_dump -h production pdfuploaddb | psql pdfuploaddb')
#
#run('touch /tmp/pdfupload')


  tasks:

    #run('rsync -avz --delete production:{0} {1}'.format('/home/swasher/pdfupload', '~'))
    - name: rsync pdfupload
      synchronize:
        src: "{{project_root}}" # on delegate host; copying entire deirectory with directory root folder
        dest: "{{user_home}}" # on current inventory host
        checksum: yes
        delete: yes
      delegate_to: production

    - name: rsync static_root
      synchronize: >
        src={{user_home}}/static_root
        dest={{user_home}}
        checksum=yes
        delete=yes
      delegate_to: production

    - name: rsync media
      synchronize: >
        src={{user_home}}/media
        dest={{user_home}}
        checksum=yes
        delete=yes
      delegate_to: production

    - name: drop db
      postgresql_db: >
        name={{db_name}}
        state=absent
      become: yes
      become_user: postgres

    - name: create db
      postgresql_db: >
        name={{ db_name }}
        encoding='UTF-8'
        lc_collate='en_US.UTF-8'
        lc_ctype='en_US.UTF-8'
        template='template0'
        state=present
      become: yes
      become_user: postgres

    - name: Ensure user has access to the database
      postgresql_user: >
        db={{ db_name }}
        name={{ db_user }}
        password={{ db_password }}
        priv=ALL
        state=present
      become: yes
      become_user: postgres

    - name: make
      shell: pg_dump -h production pdfuploaddb | psql pdfuploaddb

    - name: restart pdfupload
      file:
        path={{touchfile}}
        state=touch