---

# TODO зделать отдельно - развертывание из среды разработки и развертывание только с гитхаба

# Steps to reproduce new server:
# - install fresh ubuntu machine on ESXi (testing on 15.04). During install select `OpenSSH Server`.
# - Write down custom ssh port to /etc/ssh/sshd-config
# - On router assign appropriate static IP for new machine
# - Reboot
# - Copy ssh key from 'ansible' machine to target machine: ssh-copy-id [user]@[server-ip] -p [server-port]
# - Note: Provision assumes, that pdfupload machine is dedicated server, so python package will install system-wide.
#         This is due high load on file system during pdf processing.


# Steps to recreate local development environment
# - install pycharm, git for windows, virtualbox, vagrant with ubuntu/vivid64
# - ensure `C:\Program Files (x86)\Git\etc\gitconfig` have `autocrlf = false` (git doesn't process files)
# - run `vagrant box add ubuntu/vivid64`
# - start pycharm
# - set pycharm preferences:
# --- settings -> editor -> file encodings -> project and default encoding -> utf-8
# --- settings -> editor -> code style -> line separator -> unix and osx
# - click 'Check out from version control', then Github
# - select appropriate repo and click 'Clone'
# - start vagrant box (tools -> vagrant -> up). This set-up environment with all dependencies.

# - add string to your hosts file: [vagrant-box-ip] vagrant.tes.pp.ua
# - vault magic word hint: b-0

# TODOes and temporary solution:
# - owner of uwsgi process set to normal user, not www-data, due www-data can't write to tty1, even it is in tty group

- hosts: all
  remote_user: "{{remote_user}}"
  vars_files:
    - credentials.yml
  #gather_facts: yes

  roles:
    - tty
    - python
    - git
    - smsc
    - nginx
    - redis
    - hotfolder
    - pip
    - bower
    - django
    - uwsgi
